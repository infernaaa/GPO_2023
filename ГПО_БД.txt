CREATE TABLE import_file_x (
    id INTEGER PRIMARY KEY NOT NULL,
    file_name VARCHAR(128) NOT NULL,
    create_date DATE NOT NULL
);

CREATE TABLE import_file_y (
    id INTEGER NOT NULL UNIQUE REFERENCES import_file_x (id),
    file_name VARCHAR(128) NOT NULL,
    create_date DATE NOT NULL
);

CREATE TABLE bool_measure (
  row_id INTEGER NOT NULL,
  detector_id INTEGER NOT NULL,
  file_id INTEGER NOT NULL,
  defect_state BOOLEAN NOT NULL,
  PRIMARY KEY(row_id, detector_id, file_id),
  FOREIGN KEY (file_id) REFERENCES import_file_y(id)
);

CREATE TABLE array_measure (
  row_id INTEGER NOT NULL,
  detector_id INTEGER NOT NULL,
  file_id INTEGER NOT NULL,
  time_values real[] NOT NULL,
  amplitude_values real[] NOT NULL,
  PRIMARY KEY(row_id, detector_id, file_id),
  FOREIGN KEY (file_id) REFERENCES import_file_x(id),
  FOREIGN KEY (row_id, detector_id, file_id) REFERENCES bool_measure(row_id, detector_id, file_id)
);

// Запросы на вставку данных //

INSERT INTO public.import_file_x (id, file_name, create_date) VALUES (%s, %s, %s)

INSERT INTO public.import_file_y (id, file_name, create_date) VALUES (%s, %s, %s)

INSERT INTO public.bool_measure  
    (row_id, detector_id, file_id, defect_state) VALUES (%s, %s, %s, %s)

INSERT INTO public.array_measure
    (row_id, detector_id, file_id, time_values, amplitude_values) VALUES (%s, %s, %s, %s, %s)

// Запросы на получение данных //

SELECT import_file_y.file_name, bool_measure.row_id,
		bool_measure.detector_id, bool_measure.defect_state
	FROM
	bool_measure JOIN import_file_y 
	ON bool_measure.file_id = import_file_y.id;

SELECT import_file_x.file_name, array_measure.row_id,
		array_measure.detector_id, array_measure.time_values,
		array_measure.amplitude_values
	FROM
	array_measure JOIN import_file_x 
	ON array_measure.file_id = import_file_x.id;